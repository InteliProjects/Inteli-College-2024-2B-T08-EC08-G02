from pydantic import BaseModel, Field, ConfigDict
from datetime import datetime
from typing import List, Optional


class LLMRequest(BaseModel):
    context: Optional[str] = Field(
        None,
        description="Context (prompt)"
    )
    question: str = Field(..., description="Question to the patient")
    patient_id: str = Field(..., description="Patient ID")


class LLMResponse(BaseModel):
    answer: str = Field(..., description="LLM response")
    date_hour: datetime = Field(
        default_factory=datetime.now,
        description="Date and hour of the response"
    )


class LLMInteractionLog(BaseModel):
    model_config = ConfigDict(from_attributes=True)

    id: str = Field(..., description="ID of the interaction log.")
    patient_id: str = Field(..., description="ID of the patient.")
    question: str = Field(..., description="Answer sent by the patient.")
    answer: str = Field(..., description="Response generated by the LLM.")
    context: Optional[str] = Field(
        None,
        description="Context"
    )
    date_hour: datetime = Field(
        default_factory=datetime.now,
        description="date and hour of the interaction"
    )
